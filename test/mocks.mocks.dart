// Mocks generated by Mockito 5.4.4 from annotations
// in demo_qr_scanner/test/mocks.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i3;

import 'package:demo_qr_scanner/core/database/app_database.dart' as _i4;
import 'package:demo_qr_scanner/core/database/database_service.dart' as _i2;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

/// A class which mocks [DatabaseService].
///
/// See the documentation for Mockito's code generation for more information.
class MockDatabaseService extends _i1.Mock implements _i2.DatabaseService {
  @override
  _i3.Future<int> saveAttendanceRecord(_i4.AttendanceRecordsCompanion? entry) =>
      (super.noSuchMethod(
        Invocation.method(
          #saveAttendanceRecord,
          [entry],
        ),
        returnValue: _i3.Future<int>.value(0),
        returnValueForMissingStub: _i3.Future<int>.value(0),
      ) as _i3.Future<int>);

  @override
  _i3.Future<List<_i4.AttendanceRecord>> getAllAttendanceRecords() =>
      (super.noSuchMethod(
        Invocation.method(
          #getAllAttendanceRecords,
          [],
        ),
        returnValue: _i3.Future<List<_i4.AttendanceRecord>>.value(
            <_i4.AttendanceRecord>[]),
        returnValueForMissingStub: _i3.Future<List<_i4.AttendanceRecord>>.value(
            <_i4.AttendanceRecord>[]),
      ) as _i3.Future<List<_i4.AttendanceRecord>>);

  @override
  _i3.Future<List<_i4.AttendanceRecord>> getUnsyncedAttendanceRecords() =>
      (super.noSuchMethod(
        Invocation.method(
          #getUnsyncedAttendanceRecords,
          [],
        ),
        returnValue: _i3.Future<List<_i4.AttendanceRecord>>.value(
            <_i4.AttendanceRecord>[]),
        returnValueForMissingStub: _i3.Future<List<_i4.AttendanceRecord>>.value(
            <_i4.AttendanceRecord>[]),
      ) as _i3.Future<List<_i4.AttendanceRecord>>);

  @override
  _i3.Future<void> markAsSynced(_i4.AttendanceRecord? record) =>
      (super.noSuchMethod(
        Invocation.method(
          #markAsSynced,
          [record],
        ),
        returnValue: _i3.Future<void>.value(),
        returnValueForMissingStub: _i3.Future<void>.value(),
      ) as _i3.Future<void>);
}
